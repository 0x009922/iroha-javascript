import { defineConfig } from 'vitepress';
import Token from 'markdown-it/lib/token';
import { fixHtmlInlineTokens } from './markdown-fix-api';

export default defineConfig({
    base: process.env.PUBLIC_PATH || '/',
    title: 'Iroha 2 JS',
    description: 'JavaScript client to work with Hyperledger Iroha v2',
    markdown: {
        attrs: {
            leftDelimiter: '.{',
            rightDelimiter: '}.',
        },
        config: (md) => {
            const NAME = 'regex-tsdoc-comments';

            md.core.ruler.push(NAME, (state) => {
                if (
                    state.src.startsWith(
                        '<!-- Do not edit this file. It is automatically generated by API Documenter. -->',
                    )
                ) {
                    function traverse(tokens: Token[]) {
                        tokens.forEach((x) => {
                            if (x.type === 'inline') {
                                fixHtmlInlineTokens(x.children);
                                traverse(x.children);
                            }
                        });
                    }
                    traverse(state.tokens);
                }

                return;
            });
        },
    },
    themeConfig: {
        sidebar: {
            '/': [
                {
                    text: 'Guide',
                    link: '/guide',
                },
                {
                    text: 'API',
                    link: '/api/',
                },
            ],
        },
    },
});
