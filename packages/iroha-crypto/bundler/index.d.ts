import {createHash,createKeyGenConfiguration,createPublicKeyFromMultihash,createSignature,createPrivateKeyFromJsKey,generateKeyPairWithConfiguration,createMultihashFromPublicKey,createMultihashDigestFunctionFromString,createMultihashFromBytes,MultihashDigestBls12381g1Pub,MultihashDigestBls12381g2Pub,MultihashDigestEd25519Pub,MultihashDigestSecp256k1Pub,AlgorithmBlsNormal,AlgorithmBlsSmall,AlgorithmEd25519,AlgorithmSecp256k1,createKeyPairFromKeys} from './wasm_pack_output'
declare const crypto: {createHash: typeof createHash;createKeyGenConfiguration: typeof createKeyGenConfiguration;createPublicKeyFromMultihash: typeof createPublicKeyFromMultihash;createSignature: typeof createSignature;createPrivateKeyFromJsKey: typeof createPrivateKeyFromJsKey;generateKeyPairWithConfiguration: typeof generateKeyPairWithConfiguration;createMultihashFromPublicKey: typeof createMultihashFromPublicKey;createMultihashDigestFunctionFromString: typeof createMultihashDigestFunctionFromString;createMultihashFromBytes: typeof createMultihashFromBytes;MultihashDigestBls12381g1Pub: typeof MultihashDigestBls12381g1Pub;MultihashDigestBls12381g2Pub: typeof MultihashDigestBls12381g2Pub;MultihashDigestEd25519Pub: typeof MultihashDigestEd25519Pub;MultihashDigestSecp256k1Pub: typeof MultihashDigestSecp256k1Pub;AlgorithmBlsNormal: typeof AlgorithmBlsNormal;AlgorithmBlsSmall: typeof AlgorithmBlsSmall;AlgorithmEd25519: typeof AlgorithmEd25519;AlgorithmSecp256k1: typeof AlgorithmSecp256k1;createKeyPairFromKeys: typeof createKeyPairFromKeys;};
export { crypto }